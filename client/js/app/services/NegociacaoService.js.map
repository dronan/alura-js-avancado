{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["NegociacaoService","_http","HttpService","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","then","negociacoes","periodos","reduce","dados","periodo","concat","catch","Error","erro","resolve","reject","get","map","Negociacao","Date","objeto","data","quantidade","valor","console","log","err","negociacao","ConnectionFactory","getConnection","NegociacaoDao","conexao","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","isEquals","negociacaoExistente","error"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["class NegociacaoService {\n\n\tconstructor() {\n\t\tthis._http = new HttpService();\n\t}\n\n\tobterNegociacoes() {\n\t\treturn Promise.all([\n\t\t\t\tthis.obterNegociacoesDaSemana(),\n\t\t\t\tthis.obterNegociacoesDaSemanaAnterior(),\n\t\t\t\tthis.obterNegociacoesDaSemanaRetrasada()\n\t\t])\n\t\t.then(periodos => {\n\t\t\tlet negociacoes = periodos\n\t\t\t.reduce((dados, periodo) => dados.concat(periodo), [])\n\t\t\treturn negociacoes;\n\t\t})\n\t\t.catch(erro => {\n\t\t\tthrow new Error(erro);\n\t\t});\n\t}\n\n\tobterNegociacoesDaSemana() {\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t\n\t\t\tthis._http\n\t\t\t.get('negociacoes/semana')\n\t\t\t.then(negociacoes => {\n\t\t\t\tresolve(negociacoes.map (objeto =>  new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor )));\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t\treject(\"Não foi possivel obter as negociacoes da semana\");\n\t\t\t});\n\t\t});\n\t}\n\n\tobterNegociacoesDaSemanaAnterior() {\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t\n\t\t\tthis._http\n\t\t\t.get('negociacoes/anterior')\n\t\t\t.then(negociacoes => {\n\t\t\t\tresolve(negociacoes.map (objeto =>  new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor )));\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t\treject(\"Não foi possivel obter as negociacoes da semana anterior\");\n\t\t\t});\n\t\t});\n\t}\n\n\tobterNegociacoesDaSemanaRetrasada() {\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t\n\t\t\tthis._http\n\t\t\t.get('negociacoes/retrasada')\n\t\t\t.then(negociacoes => {\n\t\t\t\tresolve(negociacoes.map (objeto =>  new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor )));\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t\treject(\"Não foi possivel obter as negociacoes da semana retrasada\");\n\t\t\t});\n\t\t});\n\t}\n\n\tcadastra(negociacao){\n\n\t\treturn ConnectionFactory\n\t\t\t\t.getConnection()\n\t\t\t\t.then(conexao => new NegociacaoDao(conexao))\n\t\t\t\t.then(dao => dao.adiciona(negociacao))\n\t\t\t\t.then(() => \"Negociação adicionada com sucesso!\")\n\t\t\t\t.catch(erro => {\n\t\t\t\t\tconsole.log(erro);\n\t\t\t\t\tthrow new Error(\"Não foi possivel adicionar a negociação\");\n\t\t\t\t});\n\n\t}\n\n\tlista(){\n\n\t\treturn ConnectionFactory\n\t\t\t\t.getConnection()\n\t\t\t\t.then(conexao => new NegociacaoDao(conexao))\n\t\t\t\t.then(dao => dao.listaTodos())\n\t\t\t\t.catch(erro => {\n\t\t\t\t\tconsole.log(\"Erro\", erro);\n\t\t\t\t\tthrow new Error(\"Não foi possivel adicionar a negociação\");\n\t\t\t\t});\n\t\t\t\t\n\t}\n\n\n\tapaga() {\n\n\t\treturn ConnectionFactory\n\t\t\t\t.getConnection()\n\t\t\t\t.then(conexao => new NegociacaoDao(conexao))\n\t\t\t\t.then(dao => dao.apagaTodos())\n\t\t\t\t.then( () => \"Negociacao apagada com sucesso\")\n\t\t\t\t.catch(erro => {\n\t\t\t\t\tconsole.log(\"Erro\", erro);\n\t\t\t\t\tthrow new Error(\"Não foi possivel apagar a negociação\");\n\t\t\t\t});\n\t}\n\n\timporta(listaAtual) {\n\n\t\treturn this.obterNegociacoes()\n\t\t\t\t\t.then( negociacoes => \n\t\t\t\t\t\tnegociacoes.filter(negociacao => \n\t\t\t\t\t\t\t!listaAtual.some(negociacaoExistente =>\n\t\t\t\t\t\t\t\tnegociacao.isEquals(negociacaoExistente))))\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t\tthrow new Error(\"Não foi possivel importar as negociacoes\")\n\t\t\t\t\t});\n\t}\n\n}"]}