{"version":3,"sources":["../../app-es6/services/ConnectionFactory.js"],"names":["ConnectionFactory","stores","version","dbname","connection","close","Error","Promise","resolve","reject","openRequest","window","indexedDB","open","onupgradedneeded","_createStores","e","target","result","onsuccess","bind","onerror","console","log","error","name","forEach","objectStoreNames","contains","store","deleteObjectStore","createObjectStore","autoIncrement"],"mappings":";;;;;;AAAA,IAAIA,oBAAqB,YAAY;;AAEpC,KAAMC,SAAS,CAAC,aAAD,CAAf;AACA,KAAMC,UAAU,CAAhB;AACA,KAAMC,SAAS,YAAf;;AAEA,KAAIC,aAAa,IAAjB;AACA,KAAIC,QAAQ,IAAZ;;AAEA;AAEC,+BAAc;AAAA;;AACb,SAAM,IAAIC,KAAJ,CAAW,uCAAX,CAAN;AACA;;AAJF;AAAA;AAAA,mCAMwB;AACtB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvC,SAAIC,cAAcC,OAAOC,SAAP,CAAiBC,IAAjB,CAAsBV,MAAtB,EAA8BD,OAA9B,CAAlB;;AAEAQ,iBAAYI,gBAAZ,GAA+B,aAAK;AACnCd,wBAAkBe,aAAlB,CAAgCC,EAAEC,MAAF,CAASC,MAAzC;AACA,MAFD;;AAIAR,iBAAYS,SAAZ,GAAwB,aAAK;;AAE5B,UAAG,CAACf,UAAJ,EAAgB;;AAEfA,oBAAaY,EAAEC,MAAF,CAASC,MAAtB;;AAEAb,eAAQD,WAAWC,KAAX,CAAiBe,IAAjB,CAAsBhB,UAAtB,CAAR;;AAEAA,kBAAWC,KAAX,GAAmB,YAAW;AAC7B,cAAM,IAAIC,KAAJ,CAAU,4CAAV,CAAN;AACA,QAFD;AAIA;;AAEDE,cAAQJ,UAAR;AAEA,MAhBD;;AAkBAM,iBAAYW,OAAZ,GAAsB,aAAK;AAC1BC,cAAQC,GAAR,CAAYP,EAAEC,MAAF,CAASO,KAArB;AACAf,aAAOO,EAAEC,MAAF,CAASO,KAAT,CAAeC,IAAtB;AACA,MAHD;AAKA,KA9BM,CAAP;AA+BA;AAtCF;AAAA;AAAA,iCAwCsBrB,UAxCtB,EAwCkC;AAChCH,WAAOyB,OAAP,CAAe,iBAAS;;AAEvB,SAAItB,WAAWuB,gBAAX,CAA4BC,QAA5B,CAAqCC,KAArC,CAAJ,EACCzB,WAAW0B,iBAAX,CAA6BD,KAA7B;;AAEDzB,gBAAW2B,iBAAX,CAA6BF,KAA7B,EAAoC,EAAEG,eAAe,IAAjB,EAApC;AAEA,KAPD;AAQA;AAjDF;AAAA;AAAA,qCAmDyB;AACvB,QAAI5B,UAAJ,EAAe;AACdC;AACAD,kBAAa,IAAb;AACA;AACD;AAxDF;;AAAA;AAAA;AA2DA,CApEuB,EAAxB,C,CAoEM","file":"ConnectionFactory.js","sourcesContent":["var ConnectionFactory = (function () {\n\t\n\tconst stores = ['negociacoes'];\n\tconst version = 4;\n\tconst dbname = 'aluraframe';\n\t\n\tvar connection = null;\n\tvar close = null;\n\n\treturn class ConnectionFactory {\n\n\t\tconstructor() {\n\t\t\tthrow new Error (\"Não é possivel instanciar esta classe\");\n\t\t}\n\n\t\tstatic getConnection() {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tlet openRequest = window.indexedDB.open(dbname, version);\n\n\t\t\t\topenRequest.onupgradedneeded = e => {\n\t\t\t\t\tConnectionFactory._createStores(e.target.result);\n\t\t\t\t};\n\n\t\t\t\topenRequest.onsuccess = e => {\n\n\t\t\t\t\tif(!connection) { \n\t\t\t\t\t\t\n\t\t\t\t\t\tconnection = e.target.result;\n\t\t\t\t\t\t\n\t\t\t\t\t\tclose = connection.close.bind(connection);\n\t\t\t\t\t\t\n\t\t\t\t\t\tconnection.close = function() {\n\t\t\t\t\t\t\tthrow new Error(\"Voce nao pode fechar diretamente a conexao\")\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve(connection);\n\n\t\t\t\t};\n\n\t\t\t\topenRequest.onerror = e => {\n\t\t\t\t\tconsole.log(e.target.error);\n\t\t\t\t\treject(e.target.error.name);\n\t\t\t\t};\n\n\t\t\t});\n\t\t}\n\n\t\tstatic _createStores(connection) {\n\t\t\tstores.forEach(store => {\n\n\t\t\t\tif (connection.objectStoreNames.contains(store)) \n\t\t\t\t\tconnection.deleteObjectStore(store);\n\n\t\t\t\tconnection.createObjectStore(store, { autoIncrement: true});\n\n\t\t\t});\n\t\t}\n\n\t\tstatic closeConnection(){\n\t\t\tif (connection){\n\t\t\t\tclose();\n\t\t\t\tconnection = null;\n\t\t\t}\n\t\t}\n\n\t}\n})(); // funcao anonima auto executavel"]}