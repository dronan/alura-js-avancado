{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAAaA,W;;;;;;;mCAEEC,G,EAAI;AACjB,UAAI,CAACA,IAAIC,EAAT,EAAa,MAAM,IAAIC,KAAJ,CAAWF,IAAIG,UAAf,CAAN;AACb,aAAOH,GAAP;AACA;;;yBAEGI,G,EAAK;AAAA;;AAER,aAAOC,MAAMD,GAAN,EACJE,IADI,CACC;AAAA,cAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,OADD,EAEJM,IAFI,CAEC;AAAA,cAAQN,IAAIQ,IAAJ,EAAR;AAAA,OAFD,CAAP;;AAIA;;;;;;;;;;;;;;;;;;AAuBA;;;0BAEIJ,G,EAAKK,I,EAAM;AAAA;;AAEf,aAAOJ,MAAMD,GAAN,EAAW;AACjBM,gBAAS,EAAC,gBAAiB,kBAAlB,EADQ;AAEjBC,eAAQ,MAFS;AAGjBC,aAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHW,OAAX,EAKNH,IALM,CAKD;AAAA,cAAO,OAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,OALC,CAAP;;AAOA;;;;;;;;;;;;;;;;;;AAsBA","file":"HttpService.js","sourcesContent":["export class HttpService {\n\n\t_handleErrors(res){\n\t\tif (!res.ok) throw new Error (res.statusText);\n\t\treturn res;\n\t}\n\n\tget(url) {\n\n\t\treturn fetch(url)\n\t\t\t\t.then(res => this._handleErrors(res))\n\t\t\t\t.then(res =>  res.json() );\n\t\t\n\t\t/*\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t\n\t\t\tlet xhr = new XMLHttpRequest();\n\t\t\t\n\t\t\txhr.open('GET', url);\n\n\t\t\txhr.onreadystatechange = () => {\n\n\t\t\t\tif (xhr.readyState == 4) {\n\t\t\t\t\tif (xhr.status == 200 ) {\n\t\t\t\t\t\tresolve(JSON.parse(xhr.responseText));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log();\n\t\t\t\t\t\treject(xhr.responseText);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\txhr.send();\n\n\t\t});*/\n\n\t}\n\n\tpost(url, dado) {\n\n\t\treturn fetch(url, {\n\t\t\theaders: {'Content-Type' : 'application/json'},\n\t\t\tmethod: 'post',\n\t\t\tbody: JSON.stringify(dado)\n\t\t})\n\t\t.then(res => this._handleErrors(res));\n\n\t\t/*\n\t\treturn new Promise((resolve, reject) => {\n\n\t\t\tlet xhr = new XMLHttpRequest();\n\t\t\txhr.open(\"Post\", url, true);\n\t\t\txhr.setRequestHeader(\"Content-Type\", \"application/json\");\n\t\t\txhr.onreadystatechange = () => {\n\n\t\t\t\tif (xhr.readyState == 4) {\n\t\t\t\t\tif (xhr.status == 200 ) {\n\t\t\t\t\t\tresolve(JSON.parse(xhr.responseText));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log();\n\t\t\t\t\t\treject(xhr.responseText);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\txhr.send(JSON.stringify(dado)); // usando JSON.stringify para converter objeto em uma string no formato JSON.\n        });\n        */\n\n\t}\n\n}"]}